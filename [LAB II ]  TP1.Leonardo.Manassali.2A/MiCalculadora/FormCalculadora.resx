<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjYx/AI2Mfw2Mi36OjYx/8o2Mf/+NjH//jYx//42Mf/+NjH//jYx//42M
        f/+NjH//jYx//42Mf/+NjH//jYx//42Mf/+NjH//jYx//42Mf/+NjH/yjIt+jo2Mfw2NjH8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyMfwCOjYAAjYx/YZOShfmbmoz/nZyN/52cjv+dnI7/nZyO/52c
        jv+dnI3/nZyN/52cjf+dnI3/nZyN/52cjf+dnI7/nZyO/52cjv+dnI7/nZyN/5uajP+TkoX5jYx/YY6N
        gACMjH8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjYx/AAAAAACXloieo6KS/6emlv+jopL/nZyN/52c
        jf+dnI3/nZyN/56djv+lpJT/p6aV/6emlf+lpJT/np2O/52cjf+dnI3/nZyN/52cjf+jopL/p6aW/6Oi
        kv+XloieAAAAAI2MfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXlogAfXxwAqOikqWmpZX/pKOT/5eW
        iP+Yl4v/mZiM/5mYjP+ZmIz/l5aK/5uai/+mpZX/pqWV/5uai/+Xlor/mZiM/5mYjP+ZmIz/mJeL/5eW
        iP+ko5P/pqWV/6OikqV9fHACl5aIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOikgCfno4CpqWVpqal
        lf+mpZb/yMe//+Xk3//n5uH/5uXg/+fm4f/h4Nv/uLes/6WklP+lpJT/uLes/+Hg2v/k49//5OPf/+Tj
        3//k49//yMe//6allv+mpZX/pqWVpp+ejgKjopIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+e
        jgKmpZWmpaSU/66tn//p6OL/5ePe/8fBuf/c2dP/yMO7//Dv6//W1cz/pqWV/6allf/Y1sz/yczt/3uF
        6v96hOr/eILp/6Ws7P/n5uH/rq2f/6WklP+mpZWmn56OAqOikgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACjopIAn56OAqallaalpJT/r66g/+rp5P/Fv7f/Y1ND/2tbTP92aFn/5OHc/9fWzv+mpZX/pqWV/9jX
        zf/Iy+z/e4Xp/3uF6f95g+n/pavr/+fm4v+vrqD/paSU/6allaafno4Co6KSAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKOikgCfno4CpqWVpqWklP+vrqD/6ejj/9rX0f9qWkr/Sjgl/46Ddv/t7Oj/19bN/6al
        lf+mpZX/19bN/+rq7f/a2+v/2tvr/9rb6//j4+z/6Ofh/6+uoP+lpJT/pqWVpp+ejgKjopIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+ejgKmpZWmpaSU/6+uoP/q6eT/xL62/3BhUv+Lf3L/emxe/+Ph
        2//X187/pqWV/6allf/Z2M3/ur7s/1Ri6P9TYej/UF7o/4yU6v/n5uL/r66g/6WklP+mpZWmn56OAqOi
        kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjopIAn56OAqallaampZT/rayd/+bl3//u7en/3trV/+vp
        5f/e29b/8/Lu/9LRyP+mpZX/pqWV/9PSyf/c3e7/sbbs/7C27P+vtez/yczt/+Xk3v+trJ3/pqWU/6al
        laafno4Co6KSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOikgCfno4CpqWVpqallf+nppb/wL+z/9bV
        zf/Y18//19bO/9jXz//T0sn/tLOl/6WklP+lpJT/tLOl/9TTyf/a2c7/2tjN/9rYzf/Y183/wL+z/6em
        lv+mpZX/pqWVpp+ejgKjopIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+ejgKmpZWmpqWV/6al
        lf+lpJT/o6KT/6Oik/+jopP/o6KT/6Sjk/+lpJT/pqWV/6allf+lpJT/pKOT/6Oik/+jopP/o6KT/6Oi
        k/+lpJT/pqWV/6allf+mpZWmn56OAqOikgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjopIAn56OAqal
        laampZX/paSU/5eWiP+Qj4L/kZCC/5GQgv+RkIL/kZCC/52cjf+mpZX/pqWV/52cjf+RkIL/kZCC/5GQ
        gv+RkIL/kI+C/5eWiP+lpJT/pqWV/6allaafno4Co6KSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOi
        kgCfno4CpqWVpqallf+ko5P/srGn/8zLxP/Ozcb/0M/I/87Nxv/Hxr//qaib/6WklP+lpJT/qaib/8jH
        v//OzcX/zczF/83Mxf/My8T/srGn/6Sjk/+mpZX/pqWVpp+ejgKjopIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAo6KSAJ+ejgKmpZWmpqWV/6yrnf/k497/9fXx/9/c1v/Bu7P/7evn//T08P/R0Mf/pqWV/6al
        lf/R0Mf/9PPv//Tz7//08+//9PPv//Tz8P/k497/rKud/6allf+mpZWmn56OAqOikgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACjopIAn56OAqallaalpJT/r66g/+jn4v/n5eD/qqGX/2NTQv/Mx8D/7Ovm/9fW
        zv+mpZX/pqWV/9fWzv/r6uX/3drV/93a1f/d2tT/5ePe/+jn4v+vrqD/paSU/6allaafno4Co6KSAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOikgCfno4CpqWVpqWklP+vrqD/5+bh/5eNgf9bSjn/UkEv/2NT
        Qv/BurL/2djQ/6allf+mpZX/2djQ/8C6sv9lVUX/ZFVE/2JSQv+XjIH/5+bh/6+uoP+lpJT/pqWVpp+e
        jgKjopIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+ejgKmpZWmpaSU/6+uoP/o5+H/zsnC/4+E
        eP9bSjn/qqGX/97b1v/X1s7/pqWV/6allf/X1s7/3trV/7ewp/+3r6b/tq6l/8zHwP/o5+H/r66g/6Wk
        lP+mpZWmn56OAqOikgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjopIAn56OAqallaalpJT/r66f/+jn
        4f/29fL/zsnC/5eNgf/n5eD/9fTx/9bVzP+mpZX/pqWV/9bVzP/08/D/9PTw//T08P/09PD/9PPw/+jn
        4f+vrp//paSU/6allaafno4Co6KSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOikgCfno4CpqWVpqal
        lf+op5j/0M/G/+jn4f/o5+H/5+bh/+jn4v/l5N7/wL+z/6WklP+lpJT/wL+z/+Xk3v/o5+L/6Ofh/+jn
        4v/o5+H/0M/G/6inmP+mpZX/pqWVpp+ejgKjopIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+e
        jgKmpZWmpqWV/6allf+op5j/r66f/6+uoP+vrqD/r66g/62snf+nppb/pqWV/6allf+nppb/rayd/6+u
        oP+vrqD/r66g/6+un/+op5j/pqWV/6allf+mpZWmn56OAqOikgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACjopIAn56OAqallaampZX/pqWV/6amlv+nppb/p6aW/6emlv+nppb/p6aW/6enl/+np5f/p6eX/6en
        l/+nppb/p6aW/6emlv+nppb/p6aW/6amlv+mpZX/pqWV/6allaafno4Co6KSAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKOikgCfno4CpqWVpqallf+mpZX/nJiH/42FdP+MhHP/jIRz/4yEc/+MhHP/jIRz/4yE
        c/+MhHP/jIRz/4yEc/+MhHP/jIRz/4yEc/+NhXT/nJiH/6allf+mpZX/pqWVpp+ejgKjopIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAo6KSAJ+ejgKmpZWmpqWV/6Kfj/9xYU7/Xkk0/15JNf9eSjX/Xko1/15K
        Nf9eSjX/Xko1/15KNf9eSjX/Xko1/15KNf9eSjX/Xkk1/15JNP9xYU7/op+P/6allf+mpZWmn56OAqOi
        kgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACjopIAn56OAqallaanppb/nZqJ/2ZUP/9dSDP/Xkk0/15J
        NP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/XUgz/2ZUP/+dmon/p6aW/6al
        laafno4Co6KSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKOikgCfno4CpqWVpqemlv+dmon/Z1RA/15I
        M/9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSTT/Xkk0/15JNP9eSDP/Z1RA/52a
        if+nppb/pqWVpp+ejgKjopIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo6KTAKCfkAKmpZWmp6aW/52a
        if9iUT3/WEMv/1hEMP9YRDD/WEQw/1hEMP9YRDD/WEQw/1hEMP9YRDD/WEQw/1hEMP9YRDD/WEQw/1hD
        L/9iUT3/nZqJ/6emlv+mpZWmoJ+QAqOikwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClpZUApKWVAqal
        laWmpZX/o6GR/3RpWP9aSjn/Wks5/1tLOf9bSzn/W0s5/1tLOf9bSzn/W0s5/1tLOf9bSzn/W0s5/1tL
        Of9aSzn/Wko5/3RpWP+joZH/pqWV/6allaWkpZUCpaWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKal
        lQCmpZUApqWVk6allf+mpZX/o6GR/5yZif+cmIj/nJiI/5yYiP+cmIj/nJiI/5yYiP+cmIj/nJiI/5yY
        iP+cmIj/nJiI/5yYiP+cmYn/o6GR/6allf+mpZX/pqWVk6allQCmpZUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApqSUAKallQCmpZVApqWV5aallf+mpZX/p6aW/6emlv+nppb/p6aW/6emlv+nppb/p6aW/6em
        lv+nppb/p6aW/6emlv+nppb/p6aW/6emlv+mpZX/pqWV/6alleWmpZVApqWVAKaklAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApqWVAKallQKmpZVApqWVk6allaSmpZWjpqWVo6allaOmpZWjpqWVo6al
        laOmpZWjpqWVo6allaOmpZWjpqWVo6allaOmpZWjpqWVo6allaSmpZWTpqWVQKallQKmpZUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWklQClpJUBpaWVAqWllQKlpZUCpaWVAqWl
        lQKlpZUCpaWVAqWllQKlpZUCpaWVAqWllQKlpZUCpaWVAqWllQKlpZUCpaWVAqWklQGlpJUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+AAAH/gAAB/4AAAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/gAAB/4AAAf+AAAH/4AAH8=
</value>
  </data>
</root>